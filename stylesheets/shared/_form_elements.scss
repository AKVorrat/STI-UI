/*Custom Radio Buttons and Checkboxes using Font Awesome*/

input[type=radio],
input[type='checkbox'] {
  display: none;
}
input[type=radio] + label {
  display: block;
}
input[type='checkbox'] + label:before,
input[type='radio'] + label:before {
  display: inline-block;
  font-family: FontAwesome;
  font-style: normal;
  font-weight: bold;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  padding-right: 8px;
  width: 1.5rem;
}
input[type=radio] + label:before {
  content: "\f10c"; /* Radio Unchecked */
}
input[type=radio]:checked + label:before {
  content: "\f05d"; /* Radio Checked */
}
input[type="checkbox"] + label:before {
  content: "\f096"; /* Checkbox Unchecked */
  color: $sti-gray-dark;
}
input[type="checkbox"]:checked + label:before {
  content: "\f046"; /* Checkbox Checked */
  color: $sti-blue-dark;
}
.radio label,
.checkbox label {
  padding-left: 0;
}

.action-button {
  display: inline-block;
  color: $sti-white;
  @include sti-gradient-background($sti-blue-dark, $sti-blue-light);
  font-family: $montserrat;
  @include setFontToBaseline(18px, 0, 0);

  border: 0px;
  border-radius: 5px;
  padding-top: 0.3rem;
  padding-bottom: 0.3rem;
  padding-left: 0.7rem;
  padding-right: 0.7rem;
  text-align: center;
}

.action-button-next {
  @extend .action-button;
  &:hover {
    @include sti-gradient-background($sti-gray-dark, $sti-gray-light);
  }
}

.action-button-back {
  @extend .action-button;
  color: $sti-blue-dark;
  background: none;
}

.action-button-go-to-submission {
  @extend .action-button;
  @include sti-gradient-background($sti-blue-sky-dark, $sti-blue-sky-light);
  display: block;
  margin-left: auto;
  margin-right: auto;
  margin-top: span(1);
}

.form-control {
  max-width: 100%;

  display: block;
  box-sizing: border-box;
  width: 100%;
  padding: 1.5em;
  border: 1px solid $sti-gray-lighter;
  // margin: 0 0 $form-spacing;
  border-radius: 5px;
  background-color: $sti-gray-lightest;

  // @if has-value($input-transition) {
  //   transition: $input-transition;
  // }

  // Focus state
  &:focus {
    // border: $input-border-focus;
    // background-color: $input-background-focus;
    // outline: none;
    // box-shadow: $input-shadow-focus;

    // @if has-value($input-transition) {
      // transition: $input-transition;
    // }
  }
}

.sti-select-box {
  @extend .form-control;
  display: inline;
  width: auto;
}

.bootstrap-select {
  display: inline-block;
  width: auto !important;
}

/*
HTML Markup should look like this:
<div class="checkbox">
  <input type="checkbox" id="myCheckbox" name="myCheckbox" value="myCheckbox">
  <label for="myCheckbox">Checkbox Label</label>
</div>
<div class="radio">
  <input type="radio" id="myRadio" name="myRadio" value="myRadioOption">
  <label for="myRadio">Label</label>
</div>
*/
